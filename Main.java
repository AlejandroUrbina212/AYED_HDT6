/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package HDT6;
// Integrantes:
//Luis Alejandro Urbina  18473

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.LinkedHashMap;
import java.util.Map;
import static java.util.Map.Entry.comparingByValue;
import java.util.Scanner;
import java.util.TreeMap;
import java.util.regex.Pattern;
import static java.util.stream.Collectors.toMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

//Diana de Leon 18607

// 03 de Marzo de 2019

//Coleccion de Cartas, utilizando JCF (HaspMap, TreeMap, LinkedHashMap)
/**
 *
 * @author DIANA
 */
public class Main extends javax.swing.JFrame {

    Factory factory = new Factory();
    Map<String,String> mapgeneral;
    Map<String,String> mapusuario = new HashMap<>();
    Map<String,Integer> mapcant = new HashMap<>();
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jOptionPane1 = new javax.swing.JOptionPane();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Buscar archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("HashMap");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("TreeMap");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("LinkedHashMap");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("Coleccion Completa");

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setText("Coleccion del Usuario");

        jButton2.setText("Mostrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Borrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Agregar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Generar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Ordenar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7))
                    .addComponent(jRadioButton5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton6))
                                    .addComponent(jTextField1))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton4)
                                .addGap(79, 79, 79)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton1)
                            .addComponent(jButton5))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(jButton7)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //abre un buscador para encontrar el archivo
        JFileChooser archivo = new JFileChooser();
        archivo.showOpenDialog(this);
        //coloca la direccion del archivo seleccionado en el TextField
        File miarchivo = archivo.getSelectedFile();
        jTextField1.setText(miarchivo.getAbsolutePath());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //borra los datos del cuadro de texto
        jTextArea1.setEditable(true);
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        //Toma el texto de JtextField
        String miarchivo= jTextField1.getText();
        mapgeneral = factory.getMap("HASHMAP");
        //Utiliza el map seleccionado por el usuario
        if (jRadioButton1.isSelected()){
            mapgeneral = factory.getMap("HASHMAP");
            mapusuario = factory.getMap("HASHMAP");
            mapcant = factory.getMapCant("HASHMAP");
        }
        else if (jRadioButton2.isSelected()){
            mapgeneral = factory.getMap("TREEMAP");
            mapusuario = factory.getMap("TREEMAP");
            mapcant = factory.getMapCant("TREEMAP");
        }
        else if (jRadioButton3.isSelected()){
            mapgeneral = factory.getMap("LINKEDHASHMAP");
            mapusuario = factory.getMap("LINKEDHASHMAP");
            mapcant = factory.getMapCant("LINKEDHASHMAP");
        }
        else{
            // si no hay ninguno seleccionado muestra un mensaje de advertencia 
            jOptionPane1.showMessageDialog(null, "Por favor seleccione una opcion, de lo contrario se usara HashMap", "Advertencia", jOptionPane1.WARNING_MESSAGE);
        }
        //crea un lector de archivos 
        FileReader lector;
        BufferedReader lector1;
        String datos;
        try{
            // lee el archivo
            lector = new FileReader(miarchivo);
            lector1 = new BufferedReader(lector);
            //lee una linea del archivo 
            datos= lector1.readLine();
            //System.out.println(datos);
            //verifica que tenga contenido
            while (datos!=null){
                //separa el nombre y el tipo de carta
               //String partes[] = datos.split("\\|");
               String partes[] = datos.split(Pattern.quote("|"));
               //genera la baraja en un map seleccionado
               mapgeneral.put(partes[0], partes[1]);
               //System.out.println(partes[0]);
               //System.out.println(partes[1]);
               datos= lector1.readLine();
               //System.out.println(datos);
            }
            /*Scanner input;
            input = new Scanner(lector1);
            while (input.hasNextLine()) {
                input.useDelimiter("\\r\\n");
                String line = input.next();
                System.out.println(line);
            }
            input.close();*/
        }
        //captura erroes de division entre cero, no encuentre el archivo o que no sea un numero
        catch(IOException e){
            
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String answer;
        answer = JOptionPane.showInputDialog(null, "¿Que carta desea buscar?");
        if (mapgeneral.containsKey(answer)){
            String tipo= mapgeneral.get(answer);
            JOptionPane.showMessageDialog(null, "La carta es de tipo: " + tipo);  
        }
        else{
            JOptionPane.showMessageDialog(null, "Esa carta no existe");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setEditable(true);
        //create iterator to "iterate" over the keys of the mapusuario object
        Iterator<Map.Entry<String, String>> MapIterator = mapgeneral.entrySet().iterator();
        //Muestra la coleccion seleccionado por el usuario
        if (jRadioButton4.isSelected()){
            MapIterator = mapgeneral.entrySet().iterator();
            while (MapIterator.hasNext()) {
            //save the pair as a Map.Entry object
            Map.Entry<String, String> pair = MapIterator.next();
            jTextArea1.append(pair.getKey() + " | " + pair.getValue()+"\n");
            }
        }
        else if (jRadioButton5.isSelected()){
            MapIterator = mapusuario.entrySet().iterator();
            //while there´s still keys in the mapusuario Object
            while (MapIterator.hasNext()) {
            //Save the pair as an Map.Entry Object
                Map.Entry<String,String> pair = MapIterator.next();
                jTextArea1.append(pair.getKey() + " | " + pair.getValue() + " Cantidad: " + mapcant.get(pair.getKey()) +"\n");
            }
        }
        else{
            // si no hay ninguno seleccionado muestra un mensaje de advertencia 
            jOptionPane1.showMessageDialog(null, "Por favor seleccione una opcion", "Advertencia", jOptionPane1.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String cardToAddKey;
        cardToAddKey = JOptionPane.showInputDialog(null, "¿Que carta desea agregar?");
        //if mapgeneral contains the key
        if (mapgeneral.containsKey(cardToAddKey)){
       	    assert mapusuario != null;
            //add the card to the mapusuario map
      	    mapusuario.put(cardToAddKey, mapgeneral.get(cardToAddKey));
            //add 1 to the qty of cards with that key, to the mapcant
            assert mapcant != null;
	    //if it is not the first time the card is added to the usermap
            if (mapcant.containsKey(cardToAddKey)){
                //add 1 to the counter of cards with the specified cardToAddKey
                int actualCount = mapcant.get(cardToAddKey);
                mapcant.put(cardToAddKey, actualCount+1);
            } 
            else {
                //if it's the first time the card is added, just add 1 to the counter
                mapcant.put(cardToAddKey, 1);
            }	 
        }
        else{
            JOptionPane.showMessageDialog(null, "Esa carta no existe");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (jRadioButton4.isSelected()){
            Map<String, String> sortedCardMap = mapgeneral
            //access the entry Set
            .entrySet()
            //as a stream
            .stream()
            //sort with the comparingByValue Method
            .sorted(comparingByValue())
            .collect(toMap(Map.Entry::getKey, Map.Entry::getValue, (e1, e2) -> e2,LinkedHashMap::new));
            //collect all the entries and set them in the LinkedHashMap object 
            Iterator<Map.Entry<String, String>> MapIterator = sortedCardMap.entrySet().iterator();
            while (MapIterator.hasNext()) {
            //save the pair as a Map.Entry object
            Map.Entry<String, String> pair = MapIterator.next();
            jTextArea1.append(pair.getKey() + " | " + pair.getValue()+"\n");
            }
        }
        else if (jRadioButton5.isSelected()){
            //user wants to show usermap vaules sorted by type                   
            //instance of a Map type object sorted
            Map<String, String> sortedUserMap = mapusuario
            //access the entry Set
            .entrySet()
            //as a stream
            .stream()
            //sort with the comparingByValue Method
            .sorted(comparingByValue())
            .collect(toMap(Map.Entry::getKey, Map.Entry::getValue, (e1, e2) -> e2,LinkedHashMap::new));
            //collect all the entries and set them in the LinkedHashMap object
            Iterator<Map.Entry<String, String>> MapIterator = sortedUserMap.entrySet().iterator();
            //while there´s still keys in the mapusuario Object
            while (MapIterator.hasNext()) {
            //Save the pair as an Map.Entry Object
                Map.Entry<String,String> pair = MapIterator.next();
                jTextArea1.append(pair.getKey() + " | " + pair.getValue() + " Cantidad: " + mapcant.get(pair.getKey()) +"\n");
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
